
/**
 * Return the active companies
 */
const activityPlanTracking = ({ init, end, company }) => `
SELECT DISTINCT
       TASK_ID as task,
       COMPANY as company
  FROM TASKS_TRACK_MONGO WITH(NOLOCK)
 WHERE LAST_DATE_CHANGED >= '${init}'
   AND LAST_DATE_CHANGED <= '${end}'
   AND COMPANY = ${company}
`

const activityPlanTasks = (tasks) => `
    SELECT  TRF.TAREFA,
            TRF.DESCRICAO ,
            TRF.DATAPREVISTA ,
            TRF.DATAREALIZADA ,
            CAST(TRF.REALIZADA AS BIT) AS REALIZADA, --TRUE OR FALSE
            TRF.OBSERVACOES ,
            ST.NOME AS STATUS,
            SE.NOME AS SISTEMAEMPRESA,
            (CASE
                            WHEN AT.TIPOVALIDACAO = 1 THEN 'CONFORMIDADE'
                            WHEN AT.TIPOVALIDACAO = 2 THEN 'AVALIAÇÃO'
                            WHEN AT.TIPOVALIDACAO = 3 THEN 'TEXTO'
            END
            ) AS TIPOVALIDACAO,
            COALESCE(CF.NOME,AV.NOME,TRF.TEXTO) AS TIPOVALIDACAONOME,
            TA.NOME AS TIPOATIVIDADE,
            ANL.CQA,
            APA.APLICACAOPLANOATIVIDADE AS IDAPLICACAO,
        A.IDENTIFICACAOAMBIENTE + '/' + A.NOME AS AREA,
        SI.NOME AS UNIDADES,
        EQ.TAG + '/' + EQ.NOME AS EQUIPAMENTO,
            (SELECT (SELECT NOME FROM GRUPOSSITES WITH(NOLOCK) WHERE GRUPOSITE = G.GRUPOSITE ) AS NOMESUBGRUPO FROM SITESGRUPOSSITES G WITH(NOLOCK) WHERE G.SITE = APA.SITE ) AS SUBGRUPOSITE,
            (SELECT (SELECT NOME FROM GRUPOSDEGRUPOSSITES WITH(NOLOCK) WHERE GRUPODEGRUPOSITE = GG.GRUPODEGRUPOSITE ) AS NOMEGRUPO FROM SITES S WITH (NOLOCK)
            INNER JOIN SITESGRUPOSSITES G WITH(NOLOCK) ON S.SITE = G.SITE
            INNER JOIN GRUPOSSITESGRUPOSDEGRUPOS GG WITH(NOLOCK) ON GG.GRUPOSITE = G.GRUPOSITE
            WHERE S.EMPRESA = SI.EMPRESA
            AND (S.SITE = APA.SITE)) AS GRUPOSITES,
        PA.PLANOATIVIDADE,
        PA.NOME AS 'NOMEPLANO',
        PA.AUDITORIAMANUTENCAO AS IDAUDITORIA,
        AM.NOME AS NOMEAUDITORIA,
        E.NOMEFANTASIA AS EMPRESA,
        E.EMPRESA AS IDEMPRESA,
            SI.NOME AS UNIDADE,
            AM.DATAVISTORIA AS DATAVISTORIA,
            SAM.NOME AS STATUSAUDITORIA,
        U.NOME AS RESPONSAVEL,
        AM.COMENTARIOS AS COMENTARIODAAUDITORIA
    FROM    TAREFAS TRF WITH(NOLOCK)
    INNER JOIN STATUSTAREFAS ST WITH(NOLOCK) ON TRF.STATUS = ST.STATUSTAREFA
    INNER JOIN APLICACOESPLANOATIVIDADE APA WITH(NOLOCK) ON TRF.APLICACAOPLANOATIVIDADE = APA.APLICACAOPLANOATIVIDADE
    LEFT JOIN AREAS A WITH(NOLOCK) ON APA.AREA = A.AREA
    LEFT JOIN EQUIPAMENTOS EQ WITH(NOLOCK) ON APA.EQUIPAMENTO = EQ.EQUIPAMENTO
    INNER JOIN SITES SI WITH(NOLOCK) ON APA.SITE = SI.SITE
    INNER JOIN ATIVIDADES AT WITH(NOLOCK) ON TRF.ATIVIDADE = AT.ATIVIDADE
    INNER JOIN TIPOSATIVIDADE TA WITH(NOLOCK) ON AT.TIPOATIVIDADE = TA.TIPOATIVIDADE
    LEFT JOIN SISTEMASEMPRESAS SE WITH(NOLOCK) ON AT.SISTEMAEMPRESA = SE.SISTEMAEMPRESA
    LEFT JOIN ANOMALIAS ANL WITH(NOLOCK) ON TRF.TAREFA = ANL.TAREFA
    LEFT JOIN CONFORMIDADES CF WITH(NOLOCK) ON TRF.CONFORMIDADE  = CF.CONFORMIDADE
    LEFT JOIN AVALIACOES AV WITH(NOLOCK) ON TRF.AVALIACAO  = AV.AVALIACAO
    INNER JOIN PLANOSATIVIDADES PA WITH(NOLOCK) ON APA.PLANOATIVIDADE = PA.PLANOATIVIDADE
    LEFT JOIN AUDITORIASMANUTENCAO AM WITH(NOLOCK) ON PA.AUDITORIAMANUTENCAO = AM.AUDITORIAMANUTENCAO
    INNER JOIN EMPRESAS E WITH(NOLOCK) ON PA.EMPRESA = E.EMPRESA
    LEFT JOIN STATUSAUDITORIAMANUTENCAO SAM WITH(NOLOCK) ON AM.STATUS = SAM.STATUSAUDITORIAMANUTENCAO
    LEFT JOIN USUARIOS U WITH(NOLOCK) ON AM.RESPONSAVEL = U.USUARIO
    WHERE TRF.TAREFA IN (${tasks})
      AND  PA.STATUS = 1
      AND  APA.INATIVO = 0
      AND  SI.STATUSSITE = 2
`

module.exports = {
  activityPlanTracking,
  activityPlanTasks
}
