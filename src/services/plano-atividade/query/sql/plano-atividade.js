
const activityPlanCompany = ({ company }) => `
SELECT PLANOATIVIDADE as PlanoAtividade
      ,NOME  AS NomePlano
      ,EMPRESA as company
  FROM LEANKEEP.DBO.PLANOSATIVIDADES
  WHERE EMPRESA = ${company}
`

/**
 * Return the active companies
 */
const activityPlanTracking = ({ init, end, company }) => `
SELECT DISTINCT PLAN_ID as PlanoAtividade
      ,PA.NOME AS NomePlano
      ,COMPANY as company
  FROM [LEANKEEP].[DBO].[ACTIVITY_PLANS_TRACK_MONGO] TRACKING
 INNER JOIN [DBO].EMPRESAS COMPANY
    ON COMPANY.EMPRESA = TRACKING.COMPANY
 INNER JOIN [DBO].PLANOSATIVIDADES PA ON PA.PLANOATIVIDADE = TRACKING.PLAN_ID
   AND TRACKING.COMPANY = PA.EMPRESA
 WHERE TRACKING.LAST_DATE_CHANGED >= '${init}'
   AND TRACKING.LAST_DATE_CHANGED <= '${end}'
   AND COMPANY.STATUS = 1
   AND COMPANY.EMPRESA = ${company}
`

/**
 * Returns the IdApplication and applicationActivityPlan
 * @param {*} company
 * @param {*} activityPlan
 */
const activityPlanApplication = (planoAtividade) => `
  SELECT  COALESCE(APA.APLICACAOPLANOATIVIDADE,0) AS IdAplicacao,
          APA.PLANOATIVIDADE as planoAtividade,
          A.IDENTIFICACAOAMBIENTE + '/' + A.NOME AS Areas,
          SI.NOME AS Unidades,
          EQ.TAG + '/' + EQ.NOME AS Equipamentos,
          (SELECT (SELECT NOME FROM GRUPOSSITES WITH(NOLOCK) WHERE GRUPOSITE = G.GRUPOSITE ) AS NOMESUBGRUPO FROM SITESGRUPOSSITES G WITH(NOLOCK) WHERE G.SITE = APA.SITE ) AS SubGrupoSite,
          (SELECT (SELECT NOME FROM GRUPOSDEGRUPOSSITES WITH(NOLOCK) WHERE GRUPODEGRUPOSITE = GG.GRUPODEGRUPOSITE ) AS NOMEGRUPO FROM SITES S WITH (NOLOCK)
          INNER JOIN SITESGRUPOSSITES G WITH(NOLOCK) ON S.SITE = G.SITE
          INNER JOIN GRUPOSSITESGRUPOSDEGRUPOS GG WITH(NOLOCK) ON GG.GRUPOSITE = G.GRUPOSITE
          WHERE S.EMPRESA = SI.EMPRESA
          AND (S.SITE = APA.SITE)) AS GrupoSites
  FROM    APLICACOESPLANOATIVIDADE APA WITH(NOLOCK)
  LEFT JOIN AREAS A WITH(NOLOCK) ON APA.AREA = A.AREA
  LEFT JOIN EQUIPAMENTOS EQ WITH(NOLOCK) ON APA.EQUIPAMENTO = EQ.EQUIPAMENTO
  INNER JOIN SITES SI WITH(NOLOCK) ON APA.SITE = SI.SITE
  WHERE    APA.PLANOATIVIDADE IN (${planoAtividade})
  AND  APA.INATIVO = 0
  AND  SI.STATUSSITE = 2
`

const activityPlanAudits = (planoAtividade) => `

  SELECT  PA.PLANOATIVIDADE,
          PA.AUDITORIAMANUTENCAO AS IDAUDITORIA,
          AM.NOME AS NOMEAUDITORIA,
          E.NOMEFANTASIA AS EMPRESA,
          S.NOME AS UNIDADE,
          AM.DATAVISTORIA AS DATAVISTORIA,
          SAM.NOME AS STATUSAUDITORIA,
          U.NOME AS RESPONSAVEL,
          AM.COMENTARIOS AS COMENTARIODAAUDITORIA
  FROM    PLANOSATIVIDADES PA WITH(NOLOCK)
  INNER JOIN AUDITORIASMANUTENCAO AM WITH(NOLOCK) ON PA.AUDITORIAMANUTENCAO = AM.AUDITORIAMANUTENCAO
  INNER JOIN EMPRESAS E WITH(NOLOCK) ON AM.EMPRESA = E.EMPRESA
  INNER JOIN SITES S WITH(NOLOCK) ON AM.SITE = S.SITE
  INNER JOIN STATUSAUDITORIAMANUTENCAO SAM WITH(NOLOCK) ON AM.STATUS = SAM.STATUSAUDITORIAMANUTENCAO
  INNER JOIN USUARIOS U WITH(NOLOCK) ON AM.RESPONSAVEL = U.USUARIO
  WHERE  PA.STATUS = 1
  AND    PA.AUDITORIAMANUTENCAO IS NOT NULL
  AND    PA.PLANOATIVIDADE IN (${planoAtividade})
`

// /**
//  * Returns activty plan detail
//  */
const activityPlanTasks = (idAplicacao) => `


  SELECT  TRF.APLICACAOPLANOATIVIDADE application,
          TRF.TAREFA as task,
          TRF.DESCRICAO ,
          TRF.DATAPREVISTA ,
          TRF.DATAREALIZADA ,
          CAST(TRF.REALIZADA AS BIT) AS REALIZADA, --TRUE OR FALSE
          TRF.OBSERVACOES ,
          ST.NOME AS STATUS,
          SE.NOME AS SISTEMAEMPRESA,
          (CASE
                          WHEN AT.TIPOVALIDACAO = 1 THEN 'CONFORMIDADE'
                          WHEN AT.TIPOVALIDACAO = 2 THEN 'AVALIAÇÃO'
                          WHEN AT.TIPOVALIDACAO = 3 THEN 'TEXTO'
          END
          ) AS TIPOVALIDACAO,
          COALESCE(CF.NOME,AV.NOME,TRF.TEXTO) AS TIPOVALIDACAONOME,
          TA.NOME AS TIPOATIVIDADE,
          ANL.CQA
  FROM    TAREFAS TRF WITH(NOLOCK)
  INNER JOIN STATUSTAREFAS ST WITH(NOLOCK) ON TRF.STATUS = ST.STATUSTAREFA
  INNER JOIN APLICACOESPLANOATIVIDADE APA WITH(NOLOCK) ON TRF.APLICACAOPLANOATIVIDADE = APA.APLICACAOPLANOATIVIDADE
  INNER JOIN ATIVIDADES AT WITH(NOLOCK) ON TRF.ATIVIDADE = AT.ATIVIDADE
  INNER JOIN TIPOSATIVIDADE TA WITH(NOLOCK) ON AT.TIPOATIVIDADE = TA.TIPOATIVIDADE
  LEFT JOIN SISTEMASEMPRESAS SE WITH(NOLOCK) ON AT.SISTEMAEMPRESA = SE.SISTEMAEMPRESA
  LEFT JOIN ANOMALIAS ANL WITH(NOLOCK) ON TRF.TAREFA = ANL.TAREFA
  LEFT JOIN CONFORMIDADES CF WITH(NOLOCK) ON TRF.CONFORMIDADE  = CF.CONFORMIDADE
  LEFT JOIN AVALIACOES AV WITH(NOLOCK) ON TRF.AVALIACAO  = AV.AVALIACAO
  WHERE    TRF.APLICACAOPLANOATIVIDADE IN (${idAplicacao})
  AND  (APA.AREA NOT IN (SELECT A.AREA FROM AREAS A WHERE A.AREA = APA.AREA AND A.INATIVO = 1 ))
  AND  (APA.EQUIPAMENTO NOT IN (SELECT EQ.EQUIPAMENTO FROM EQUIPAMENTOS EQ WITH (NOLOCK) WHERE EQ.EQUIPAMENTO = APA.EQUIPAMENTO AND EQ.INATIVO = 1))
  AND ( EXISTS ( SELECT S.SITE FROM SITESGRUPOSSITES S  WITH (NOLOCK)
      INNER JOIN  GRUPOSSITES G WITH (NOLOCK) ON S.GRUPOSITE = G.GRUPOSITE
      WHERE G.STATUSGRUPOSITE = 1 AND S.SITE = APA.SITE)
  OR  NOT EXISTS ( SELECT S.SITE FROM SITESGRUPOSSITES S  WITH (NOLOCK) WHERE S.SITE = APA.SITE) OR APA.SITE IS NULL)
`

const taskPictures = (tasks) => `
  SELECT FTR.TAREFA as task,
         FTR.FOTOPATH,
         FTR.OBSERVACAO
   FROM  FOTOSTAREFAS FTR WITH (NOLOCK)
  WHERE  FTR.TAREFA IN (${tasks})
`

const taskSignatures = ({ task }) => `
  DECLARE @TAREFA INT = ${task}
  SELECT FA.TAREFA,FA.ASSINATURAPATH,
      (SELECT NOME FROM USUARIOS WITH(NOLOCK) WHERE USUARIO = FA.USUARIO ) AS USUARIO
  FROM   TAREFASASSINATURAS FA WITH (NOLOCK)
  WHERE  FA.TAREFA = @TAREFA
`

const activityPlanAnomalies = (company, tasks) => `

  DECLARE @EMPRESA INT = ${company}
  DECLARE @TAREFA INT = ${tasks || 0}

  SELECT  ANL.CQA ,
      (SELECT NOME FROM EMPRESAS WITH (NOLOCK) WHERE EMPRESA = ANL.EMPRESA) AS NOMEEMPRESA,
      (SELECT NOME FROM SITES WITH (NOLOCK) WHERE SITE = ANL.SITE) AS UNIDADE,
      ANL.ANOMALIA ,
      ANL.AUDITORIAMANUTENCAO ,
      (SELECT NOME FROM STATUSANOMALIA WITH (NOLOCK) WHERE STATUSANOMALIA = ANL.STATUS ) AS STATUSANOMLIA,
      ANL.DATAREGISTRO ,
      ANL.DATALIMITEEXECUCAO,
      ANL.DESCRICAO AS DESCRICAOANOMALIA,
      ANL.GID,
      ANL.ANOMALIATIPICA ,
      ANL.TIPICA,
      ANL.CENTROCUSTO,
      ANL.CUSTO
  FROM DBO.ANOMALIAS ANL WITH(NOLOCK)
  WHERE ANL.EMPRESA = @EMPRESA
  AND ANL.TAREFA IN (@TAREFA)
  AND ANL.SITE IN (SELECT SITE FROM SITES WITH (NOLOCK) WHERE SITE = ANL.SITE AND STATUSSITE = 2)
`
const activityPlanAnomaliesResponsable = (company, anomaly) => `
  DECLARE @Empresa int = ${company}
  DECLARE @Anomalia int = ${anomaly}
  select  anl.AuditoriaManutencao as IdAuditoria,
      am.Nome As NomeAuditoria,
      (select NomeFantasia from Empresas with(nolock) where Empresa = am.Empresa) as Empresa,
      (select Nome from Sites with (nolock) where Site = am.Site) as Unidade,
      am.DataVistoria As DataVistoria,
      (select Nome from StatusAuditoriaManutencao with(nolock) where StatusAuditoriaManutencao = am.Status) as StatusAuditoria,
      (select Nome from Usuarios with(nolock) where Usuario = am.Responsavel) as Responsavel,
      am.Comentarios as ComentarioDaAuditoria
  from    Anomalias anl WITH(NOLOCK)
  inner join AuditoriasManutencao am WITH(NOLOCK) on anl.AuditoriaManutencao = am.AuditoriaManutencao
  Where  anl.Empresa = @Empresa
  and    anl.AuditoriaManutencao is not null
  and    anl.Anomalia = @Anomalia
`

module.exports = {
  activityPlanCompany,
  activityPlanTracking,
  activityPlanApplication,
  activityPlanAudits,
  activityPlanTasks,
  activityPlanAnomalies,
  activityPlanAnomaliesResponsable,
  taskPictures,
  taskSignatures
}
